/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package org.connectbot;

public final class R {
    public static final class anim {
        public static final int fade_out_delayed=0x7f040000;
        public static final int fade_stay_hidden=0x7f040001;
        public static final int keyboard_fade_in=0x7f040002;
        public static final int keyboard_fade_out=0x7f040003;
        public static final int slide_left_in=0x7f040004;
        public static final int slide_left_out=0x7f040005;
        public static final int slide_right_in=0x7f040006;
        public static final int slide_right_out=0x7f040007;
    }
    public static final class array {
        public static final int list_authagent=0x7f07000d;
        public static final int list_authagent_values=0x7f07000e;
        public static final int list_camera=0x7f070003;
        public static final int list_camera_values=0x7f070004;
        public static final int list_color_values=0x7f070006;
        public static final int list_colors=0x7f070005;
        public static final int list_delkey=0x7f070011;
        public static final int list_delkey_values=0x7f070012;
        public static final int list_emulation_modes=0x7f070000;
        public static final int list_keymode=0x7f070009;
        public static final int list_keymode_values=0x7f07000a;
        public static final int list_portforward_types=0x7f07000f;
        public static final int list_pubkeyids=0x7f07000b;
        public static final int list_pubkeyids_value=0x7f07000c;
        public static final int list_rotation=0x7f070001;
        public static final int list_rotation_values=0x7f070002;
        public static final int list_update=0x7f070007;
        public static final int list_update_values=0x7f070008;
        public static final int list_wizard_topics=0x7f070010;
    }
    public static final class attr {
    }
    public static final class color {
        public static final int blue=0x7f0a0000;
        public static final int green=0x7f0a0001;
        public static final int red=0x7f0a0002;
    }
    public static final class drawable {
        public static final int button_ctrl=0x7f020000;
        public static final int button_esc=0x7f020001;
        public static final int button_keyboard=0x7f020002;
        public static final int connected=0x7f020003;
        public static final int highlight_disabled_pressed=0x7f020004;
        public static final int ic_btn_back=0x7f020005;
        public static final int ic_btn_next=0x7f020006;
        public static final int icon=0x7f020007;
        public static final int icon_older=0x7f020008;
        public static final int notification_icon=0x7f020009;
        public static final int pubkey=0x7f02000a;
        public static final int pubkey_locked=0x7f02000b;
        public static final int pubkey_unlocked=0x7f02000c;
    }
    public static final class id {
        public static final int action_next=0x7f0b0021;
        public static final int action_prev=0x7f0b0020;
        public static final int bg=0x7f0b0002;
        public static final int bits=0x7f0b0014;
        public static final int bits_slider=0x7f0b0015;
        public static final int button_ctrl=0x7f0b000e;
        public static final int button_esc=0x7f0b000f;
        public static final int button_keyboard=0x7f0b000d;
        public static final int color_grid=0x7f0b0003;
        public static final int confirm_use=0x7f0b0019;
        public static final int console_boolean_group=0x7f0b0008;
        public static final int console_flip=0x7f0b0004;
        public static final int console_password=0x7f0b0007;
        public static final int console_password_group=0x7f0b0005;
        public static final int console_password_instructions=0x7f0b0006;
        public static final int console_prompt=0x7f0b0009;
        public static final int console_prompt_no=0x7f0b000a;
        public static final int console_prompt_yes=0x7f0b000b;
        public static final int dsa=0x7f0b0013;
        public static final int entropy=0x7f0b0024;
        public static final int fg=0x7f0b0001;
        public static final int fg_label=0x7f0b0000;
        public static final int front_quickconnect=0x7f0b001e;
        public static final int height=0x7f0b0029;
        public static final int key_type=0x7f0b0011;
        public static final int keyboard_group=0x7f0b000c;
        public static final int nickname=0x7f0b0010;
        public static final int old_password=0x7f0b0023;
        public static final int old_password_prompt=0x7f0b0022;
        public static final int password1=0x7f0b0016;
        public static final int password2=0x7f0b0017;
        public static final int portforward_destination=0x7f0b0027;
        public static final int portforward_source=0x7f0b0026;
        public static final int portforward_type=0x7f0b0025;
        public static final int rsa=0x7f0b0012;
        public static final int save=0x7f0b001a;
        public static final int terminal_overlay=0x7f0b002a;
        public static final int topic_text=0x7f0b001c;
        public static final int topics=0x7f0b001b;
        public static final int transport_selection=0x7f0b001d;
        public static final int unlock_at_startup=0x7f0b0018;
        public static final int width=0x7f0b0028;
        public static final int wizard_flipper=0x7f0b001f;
    }
    public static final class layout {
        public static final int act_colors=0x7f030000;
        public static final int act_console=0x7f030001;
        public static final int act_generatepubkey=0x7f030002;
        public static final int act_help=0x7f030003;
        public static final int act_help_topic=0x7f030004;
        public static final int act_hostlist=0x7f030005;
        public static final int act_portforwardlist=0x7f030006;
        public static final int act_pubkeylist=0x7f030007;
        public static final int act_wizard=0x7f030008;
        public static final int dia_changepassword=0x7f030009;
        public static final int dia_gatherentropy=0x7f03000a;
        public static final int dia_password=0x7f03000b;
        public static final int dia_portforward=0x7f03000c;
        public static final int dia_resize=0x7f03000d;
        public static final int item_host=0x7f03000e;
        public static final int item_portforward=0x7f03000f;
        public static final int item_pubkey=0x7f030010;
        public static final int item_terminal=0x7f030011;
        public static final int wiz_eula=0x7f030012;
    }
    public static final class raw {
        public static final int bell=0x7f060000;
    }
    public static final class string {
        public static final int alert_disconnect_msg=0x7f080044;
        public static final int alert_key_corrupted_msg=0x7f08003e;
        public static final int alert_passwords_do_not_match_msg=0x7f08003c;
        public static final int alert_sdcard_absent=0x7f08003f;
        public static final int alert_wrong_password_msg=0x7f08003d;
        public static final int app_desc=0x7f080003;
        /**  Displayed in the notification bar that connections are active 
         */
        public static final int app_is_running=0x7f0800d1;
        public static final int app_name=0x7f080000;
        /**  The time that has elapsed since a host was connected to when it has been a day or more. 
         */
        public static final int bind_days=0x7f080086;
        /**  The time that has elapsed since a host was connected to when it has been less than a day. 
         */
        public static final int bind_hours=0x7f080085;
        /**  The time that has elapsed since a host was connected to when it has been less than an hour. 
         */
        public static final int bind_minutes=0x7f080084;
        /**  Displayed to indicate a host has never been connected to. 
         */
        public static final int bind_never=0x7f080083;
        /**  Add a new item (e.g., host or pubkey) to the list. 
         */
        public static final int button_add=0x7f080040;
        /**  Change an existing item's (e.g., host or pubkey) details. 
         */
        public static final int button_change=0x7f080041;
        /**  Button that begins the generation of a public key pair. 
         */
        public static final int button_generate=0x7f080042;
        /**  Button label to answer "No" to a yes/no prompt 
         */
        public static final int button_no=0x7f080090;
        /**  Button that resizes the screen to the user-specified dimensions. 
         */
        public static final int button_resize=0x7f080043;
        /**  Button label to answer "Yes" to a yes/no prompt 
         */
        public static final int button_yes=0x7f08008f;
        /**  Very short label indicating the thing next to it is "background color." 
         */
        public static final int color_bg=0x7f0800d7;
        public static final int color_blue=0x7f0800d4;
        public static final int color_gray=0x7f0800d5;
        public static final int color_green=0x7f0800d3;
        public static final int color_red=0x7f0800d2;
        /**  Very short label indicating the thing next to it is "foreground color." 
         */
        public static final int colors_fg=0x7f0800d6;
        /**  Message given when user copies from the terminal. 
         */
        public static final int console_copy_done=0x7f080087;
        /**  Instructions for how to copy from the terminal. The '\n' entries are to split lines to improve readability and prevent wrapping off the screen. 
         */
        public static final int console_copy_start=0x7f080088;
        /**  Button to close the disconnected terminal window. 
         */
        public static final int console_menu_close=0x7f080089;
        /**  Button to begin copying from the terminal to the clipboard. 
         */
        public static final int console_menu_copy=0x7f08008a;
        /**  Button to paste from the clipboard to the terminal. 
         */
        public static final int console_menu_paste=0x7f08008b;
        /**  Button that brings user to the Port Forwards List. 
         */
        public static final int console_menu_portforwards=0x7f08008c;
        /**  Button that brings user to the terminal resizing dialog where they can force a size. 
         */
        public static final int console_menu_resize=0x7f08008d;
        /**  Button that brings up the list of URLs on the current screen 
         */
        public static final int console_menu_urlscan=0x7f08008e;
        public static final int copyright_info=0x7f080002;
        public static final int delete_message=0x7f0800b1;
        public static final int delete_neg=0x7f0800b3;
        public static final int delete_pos=0x7f0800b2;
        /**  String displayed to user when they're asked to submit exceptions to the ConnectBot developers 
         */
        public static final int exceptions_submit_message=0x7f0800cf;
        /**  Part of the formatting hints that will be used like: username@hostname:port 
         */
        public static final int format_hostname=0x7f08009b;
        /**  Part of the formatting hints that will be used like: username@hostname:port 
         */
        public static final int format_port=0x7f08009c;
        /**  Part of the formatting hints that will be used like: username@hostname:port 
         */
        public static final int format_username=0x7f08009a;
        public static final int help_about=0x7f080011;
        public static final int help_intro=0x7f080010;
        public static final int help_keyboard=0x7f080012;
        /**  The string to present in the quick-connect box to hint the user to the format for connecting to hosts. 
         */
        public static final int hint_userhost=0x7f080098;
        /**  Sent to user when the remote public encryption key fingerprint doesn't match the local database 
         */
        public static final int host_authenticity_warning=0x7f08003a;
        /**  First field is encryption algorithm. Second is the actual fingerprint in hex digits 
         */
        public static final int host_fingerprint=0x7f08003b;
        /**  The body of the warning a user gets when the host key has changed. Note that this can be a very serious attack, so we try to be as "loud" to the user as possible. 
         */
        public static final int host_verification_failure_warning=0x7f080037;
        /**  The header of the warning a user gets when the host key has changed. Note that this can be a very serious attack, so we try to be as "loud" to the user as possible. 
         */
        public static final int host_verification_failure_warning_header=0x7f080036;
        /**  Preference title for the SSH Authentication Agent Forwarding for a host connection 
         */
        public static final int hostpref_authagent_title=0x7f080072;
        /**  Host color category preference title 
         */
        public static final int hostpref_color_title=0x7f08006f;
        /**  Summary for compression preference 
         */
        public static final int hostpref_compression_summary=0x7f080076;
        /**  Host compression preference title 
         */
        public static final int hostpref_compression_title=0x7f080075;
        /**  Host preference category title for connection settings 
         */
        public static final int hostpref_connection_category=0x7f08007f;
        /**  Summary for field asking what key code is sent to the server when DEL key is pressed. 
         */
        public static final int hostpref_delkey_summary=0x7f08007c;
        /**  Setting for what key code is sent to the server when DEL key is pressed. 
         */
        public static final int hostpref_delkey_title=0x7f08007b;
        /**  Host character encoding preference summary 
         */
        public static final int hostpref_encoding_summary=0x7f08007e;
        /**  Host character encoding preference title 
         */
        public static final int hostpref_encoding_title=0x7f08007d;
        /**  Host's default font size when opening the terminal in points (pt) 
         */
        public static final int hostpref_fontsize_title=0x7f080070;
        /**  Hostname field title for host editor preference 
         */
        public static final int hostpref_hostname_title=0x7f080081;
        /**  Host nickname field preference title 
         */
        public static final int hostpref_nickname_title=0x7f08006e;
        /**  Port field title for host editor preference 
         */
        public static final int hostpref_port_title=0x7f080082;
        /**  Host post-login automation preference summary 
         */
        public static final int hostpref_postlogin_summary=0x7f080074;
        /**  Host post-login automation preference title 
         */
        public static final int hostpref_postlogin_title=0x7f080073;
        /**  Host pubkey usage preference title 
         */
        public static final int hostpref_pubkeyid_title=0x7f080071;
        /**  Summary for preference asking whether the host should be reconnected to when it disconnects 
         */
        public static final int hostpref_stayconnected_summary=0x7f08007a;
        /**  Setting for whether the host should be reconnected to automatically upon disconnect 
         */
        public static final int hostpref_stayconnected_title=0x7f080079;
        /**  Username field title for host editor preference 
         */
        public static final int hostpref_username_title=0x7f080080;
        /**  Summary for field asking whether a shell session should be started up upon connection or not 
         */
        public static final int hostpref_wantsession_summary=0x7f080078;
        /**  Setting for whether we want a session to start up when we connect to a host 
         */
        public static final int hostpref_wantsession_title=0x7f080077;
        /**  Describes the image of the "connected to host" icon for accessibility purposes. 
         */
        public static final int image_description_connected=0x7f0800d8;
        /**  Describes the icon of the "locked pubkey" icon for accessibility purposes. 
         */
        public static final int image_description_key_is_locked=0x7f0800d9;
        /**  Describes the icon of the "send escape character" button in the terminal view for
	     accessibility purposes. 
         */
        public static final int image_description_send_escape_character=0x7f0800db;
        /**  Describes the icon of the "show keyboard" button in the terminal view for accessibility
	     purposes. 
         */
        public static final int image_description_show_keyboard=0x7f0800dc;
        /**  Describes the icon of the "send control character" button in the terminal view for
	     accessibility purposes. 
         */
        public static final int image_description_toggle_control_character=0x7f0800da;
        /**  Selection to indicate pressing the Camera button should send "Ctrl+A". 
         */
        public static final int list_camera_ctrla=0x7f0800ab;
        /**  Selection to indicate pressing the Camera button should send "Ctrl+A then Space". 
         */
        public static final int list_camera_ctrlaspace=0x7f0800aa;
        /**  Selection to indicate pressing the Camera button should send the "Esc" key. 
         */
        public static final int list_camera_esc=0x7f0800ac;
        /**  Selection to indicate pressing the Camera button should send "Esc+A". 
         */
        public static final int list_camera_esc_a=0x7f0800ad;
        /**  Selection to indicate pressing the Camera button should send nothing at all. 
         */
        public static final int list_camera_none=0x7f0800ae;
        /**  Name for the backspace character 
         */
        public static final int list_delkey_backspace=0x7f0800af;
        /**  Name for the ASCII DEL character 
         */
        public static final int list_delkey_del=0x7f0800b0;
        /**  Hint given to user when the format they're using is incorrect in the quick-connect box. 
         */
        public static final int list_format_error=0x7f080099;
        public static final int list_host_delete=0x7f0800a4;
        public static final int list_host_disconnect=0x7f0800a1;
        public static final int list_host_edit=0x7f0800a2;
        /**  Note that the '\n' splits the lines so it's actually "quick-connect box below to connect" 
         */
        public static final int list_host_empty=0x7f0800a5;
        public static final int list_host_portforwards=0x7f0800a3;
        /**  Preference selection to indicate use of left side of keyboard for special shortcuts. 
         */
        public static final int list_keymode_left=0x7f080067;
        /**  Preference selection to indicate never to use special shortcut keys. 
         */
        public static final int list_keymode_none=0x7f080068;
        /**  Preference selection to indicate use of right side of keyboard for special shortcuts. 
         */
        public static final int list_keymode_right=0x7f080066;
        public static final int list_menu_pubkeys=0x7f08009d;
        public static final int list_menu_settings=0x7f0800a0;
        /**  Selection choice to sort hosts by color. 
         */
        public static final int list_menu_sortcolor=0x7f08009e;
        /**  Selection choice to sort hosts by nickname. 
         */
        public static final int list_menu_sortname=0x7f08009f;
        /**  Preference to use any pubkey to authenticate to this host. 
         */
        public static final int list_pubkeyids_any=0x7f08006a;
        /**  Preference to not use pubkeys to authenticate to this host. 
         */
        public static final int list_pubkeyids_none=0x7f080069;
        /**  Selection to indicate the rotation should be selected automatically based on the tilt sensor. 
         */
        public static final int list_rotation_auto=0x7f0800a9;
        /**  Default screen rotation preference selection 
         */
        public static final int list_rotation_default=0x7f0800a6;
        public static final int list_rotation_land=0x7f0800a7;
        public static final int list_rotation_port=0x7f0800a8;
        /**  Frequency for which to check for program updates. 
         */
        public static final int list_update_daily=0x7f08006b;
        /**  Frequency for which to check for program updates. 
         */
        public static final int list_update_never=0x7f08006d;
        /**  Frequency for which to check for program updates. 
         */
        public static final int list_update_weekly=0x7f08006c;
        public static final int local_shell_unavailable=0x7f0800ca;
        /**  Menu selection to reset colors to their defaults. 
         */
        public static final int menu_colors_reset=0x7f0800d0;
        public static final int menu_delete=0x7f08000e;
        public static final int menu_insert=0x7f08000d;
        public static final int menu_preferences=0x7f08000f;
        public static final int msg_copyright=0x7f080045;
        /**  DO NOT MANUALLY UPDATE VERSION!!!
	  Updating is update by the ant task "update-version" in build.xml
	
         */
        public static final int msg_version=0x7f080001;
        /**  Preference selection for SSH Authentication Agent to never use pubkeys 
         */
        public static final int no=0x7f0800cc;
        /**  Text sent to the user to alert them that a Terminal Bell is received in a background session 
         */
        public static final int notification_text=0x7f0800cb;
        public static final int portforward_delete=0x7f080029;
        public static final int portforward_done=0x7f080095;
        /**  Selection for a "dynamic" port forward. E.g., connections to a port listening locally is forwarded based on the SOCKS protocol to an arbitrary remote host and port. 
         */
        public static final int portforward_dynamic=0x7f080093;
        public static final int portforward_edit=0x7f080028;
        /**  Note that the '\n' splits lines, so it's actually "create port forwards" 
         */
        public static final int portforward_list_empty=0x7f080027;
        /**  Selection for a "local" port forward. E.g., connections to a port listening locally is forwarded to the remote end's listening port. 
         */
        public static final int portforward_local=0x7f080091;
        public static final int portforward_menu_add=0x7f080097;
        /**  Button that commits the port forward to be made from the Port Forward Creation dialog. 
         */
        public static final int portforward_pos=0x7f080094;
        public static final int portforward_problem=0x7f080096;
        /**  Selection for a "remote" port forward. E.g., connections to a port listening remotely is forwarded to the local end's listening port. 
         */
        public static final int portforward_remote=0x7f080092;
        /**  Category title for the Terminal Bell preferences 
         */
        public static final int pref_bell_category=0x7f080060;
        /**  Brief summary of the feature that is enabled when the checkbox preference for the receive notifications on terminal bell feature is checked 
         */
        public static final int pref_bell_notification_summary=0x7f080065;
        /**  Checkbox preference title for the receive notifications on terminal bell feature 
         */
        public static final int pref_bell_notification_title=0x7f080064;
        /**  Checkbox preference title for the audible terminal bell feature 
         */
        public static final int pref_bell_title=0x7f080061;
        /**  Checkbox preference title for the vibrate on terminal bell feature 
         */
        public static final int pref_bell_vibrate_title=0x7f080063;
        /**  Title for the slider preference to set the volume 
         */
        public static final int pref_bell_volume_title=0x7f080062;
        /**  Summary for the haptic feedback (bumpy arrow) preference 
         */
        public static final int pref_bumpyarrows_summary=0x7f08005f;
        /**  Name for the haptic feedback (bumpy arrow) preference 
         */
        public static final int pref_bumpyarrows_title=0x7f08005e;
        /**  Summary for the camera shortcut usage preference 
         */
        public static final int pref_camera_summary=0x7f080059;
        /**  Name for the camera shortcut usage preference 
         */
        public static final int pref_camera_title=0x7f080058;
        /**  Summary for the preference that forces the service to stay running in the background. 
         */
        public static final int pref_conn_persist_summary=0x7f080055;
        /**  Name for the preference that forces the service to stay running in the background.
         */
        public static final int pref_conn_persist_title=0x7f080054;
        /**  The category title for terminal emulation preferences. 
         */
        public static final int pref_emulation_category=0x7f080046;
        /**  Description of the emulation terminal type preference. 
         */
        public static final int pref_emulation_summary=0x7f080048;
        /**  Name for the emulation terminal type preference. 
         */
        public static final int pref_emulation_title=0x7f080047;
        /**  Summary for the full screen preference 
         */
        public static final int pref_fullscreen_summary=0x7f08004f;
        /**  Name for the full screen preference 
         */
        public static final int pref_fullscreen_title=0x7f08004e;
        /**  Summary for the camera shortcut usage preference 
         */
        public static final int pref_keepalive_summary=0x7f08005b;
        /**  Name for the keep screen on preference 
         */
        public static final int pref_keepalive_title=0x7f08005a;
        /**  Summary for the keyboard shortcuts preference 
         */
        public static final int pref_keymode_summary=0x7f080057;
        /**  Name for the keyboard shortcuts preference 
         */
        public static final int pref_keymode_title=0x7f080056;
        /**  Summary for the memorize keys preference 
         */
        public static final int pref_memkeys_summary=0x7f080051;
        /**  Name for the memorize keys preference 
         */
        public static final int pref_memkeys_title=0x7f080050;
        /**  Summary for the rotation mode preference 
         */
        public static final int pref_rotation_summary=0x7f08004d;
        /**  Name for the rotation mode preference 
         */
        public static final int pref_rotation_title=0x7f08004c;
        /**  Description of the scrollback size preference 
         */
        public static final int pref_scrollback_summary=0x7f08004a;
        /**  Name for the scrollback size preference 
         */
        public static final int pref_scrollback_title=0x7f080049;
        /**  The category title for user interface preferences 
         */
        public static final int pref_ui_category=0x7f08004b;
        /**  Summary for the update check preference 
         */
        public static final int pref_update_summary=0x7f080053;
        /**  Name for the update check preference 
         */
        public static final int pref_update_title=0x7f080052;
        /**  Summary for the Wi-Fi lock preference 
         */
        public static final int pref_wifilock_summary=0x7f08005d;
        /**  Name for the Wi-Fi lock preference 
         */
        public static final int pref_wifilock_title=0x7f08005c;
        /**  Added after a "Password:" prompt to indicate user needs to confirm entry. 
         */
        public static final int prompt_again=0x7f080030;
        /**  Prompt for whether to allow SSH Authentication Agent to use the specified key. Note that the '\n' means split the line so it's actually "host to use key" 
         */
        public static final int prompt_allow_agent_to_use_key=0x7f080035;
        /**  Prompt for the size of the private key in bits. 
         */
        public static final int prompt_bits=0x7f080033;
        /**  Prompt user must answer yes or no to when the remote host fails verification of encryption fingerprint 
         */
        public static final int prompt_continue_connecting=0x7f080039;
        /**  The "host:port" combination used for port forward destinations. 
         */
        public static final int prompt_destination=0x7f08002d;
        /**  Prompt user gets when the remote host has disconnected unexpectedly. 
         */
        public static final int prompt_host_disconnected=0x7f080038;
        public static final int prompt_nickname=0x7f08002a;
        /**  An example string that could be used as a nickname for a pubkey. 
         */
        public static final int prompt_nickname_hint_pubkey=0x7f08002b;
        public static final int prompt_old_password=0x7f08002e;
        public static final int prompt_password=0x7f08002f;
        public static final int prompt_password_can_be_blank=0x7f080032;
        /**  Prompt for the password to unlock a certain pubkey. 
         */
        public static final int prompt_pubkey_password=0x7f080034;
        /**  The source TCP port for port forwards. 
         */
        public static final int prompt_source_port=0x7f08002c;
        /**  Label for the user to select port forward type. 
         */
        public static final int prompt_type=0x7f080031;
        public static final int pubkey_change_password=0x7f08001e;
        /**  Pubkey preference asking user whether the key use should be confirmed via prompt before it can be used for authentication 
         */
        public static final int pubkey_confirm_use=0x7f080026;
        public static final int pubkey_copy_private=0x7f08001a;
        public static final int pubkey_copy_public=0x7f08001b;
        public static final int pubkey_delete=0x7f080015;
        public static final int pubkey_failed_add=0x7f080022;
        /**  Dialog title when user must move finger randomly over an area to gather entropy (collect random bits) 
         */
        public static final int pubkey_gather_entropy=0x7f080016;
        public static final int pubkey_generate=0x7f080013;
        public static final int pubkey_generating=0x7f080019;
        public static final int pubkey_import=0x7f080014;
        public static final int pubkey_import_parse_problem=0x7f080020;
        /**  Note that the '\n' just splits lines, so it's actually "create or import" 
         */
        public static final int pubkey_list_empty=0x7f08001c;
        public static final int pubkey_list_pick=0x7f08001f;
        public static final int pubkey_load_on_start=0x7f080025;
        public static final int pubkey_memory_load=0x7f080023;
        public static final int pubkey_memory_unload=0x7f080024;
        public static final int pubkey_touch_hint=0x7f080018;
        public static final int pubkey_touch_prompt=0x7f080017;
        public static final int pubkey_unknown_format=0x7f08001d;
        public static final int pubkey_unlock=0x7f080021;
        public static final int resolve_connect=0x7f08000b;
        /**  Menu selection where user must move finger randomly over an area to gather entropy (collect random bits) 
         */
        public static final int resolve_entropy=0x7f08000c;
        public static final int service_desc=0x7f080004;
        public static final int terminal_auth=0x7f0800be;
        public static final int terminal_auth_fail=0x7f0800c7;
        public static final int terminal_auth_ki=0x7f0800c5;
        public static final int terminal_auth_ki_fail=0x7f0800c6;
        public static final int terminal_auth_pass=0x7f0800bf;
        public static final int terminal_auth_pass_fail=0x7f0800c0;
        public static final int terminal_auth_pubkey_any=0x7f0800c1;
        public static final int terminal_auth_pubkey_fail=0x7f0800c4;
        public static final int terminal_auth_pubkey_invalid=0x7f0800c2;
        public static final int terminal_auth_pubkey_specific=0x7f0800c3;
        /**  Displayed in terminal when attempting to connect to a host. The first two
	     variables are host:port and the third is the protocol (e.g., SSH) 
         */
        public static final int terminal_connecting=0x7f0800b8;
        public static final int terminal_enable_portfoward=0x7f0800c9;
        public static final int terminal_failed=0x7f0800ba;
        public static final int terminal_no_hosts_connected=0x7f0800b7;
        public static final int terminal_no_session=0x7f0800c8;
        /**  Displays the host key to the user in the terminal 
         */
        public static final int terminal_sucess=0x7f0800b9;
        /**  Displayed on the terminal describing the cryptographic algorithm names 
         */
        public static final int terminal_using_algorithm=0x7f0800bd;
        /**  Displayed on the terminal describing the cryptographic algorithm names 
         */
        public static final int terminal_using_c2s_algorithm=0x7f0800bc;
        /**  Displayed on the terminal describing the cryptographic algorithm names 
         */
        public static final int terminal_using_s2c_algorithm=0x7f0800bb;
        /**  Window title for color list editing screen 
         */
        public static final int title_colors=0x7f08000a;
        /**  Window title for Help index 
         */
        public static final int title_help=0x7f080009;
        /**  Window title when editing host details 
         */
        public static final int title_host_editor=0x7f080008;
        /**  Window title for the Host List 
         */
        public static final int title_hosts_list=0x7f080005;
        /**  Window title for the Port Forwards List 
         */
        public static final int title_port_forwards_list=0x7f080007;
        /**  Window title for the Pubkeys List 
         */
        public static final int title_pubkey_list=0x7f080006;
        public static final int upgrade=0x7f0800dd;
        public static final int upgrade_neg=0x7f0800df;
        public static final int upgrade_pos=0x7f0800de;
        /**  Preference selection for SSH Authentication Agent to be able to use pubkeys "with confirmation" only 
         */
        public static final int with_confirmation=0x7f0800cd;
        /**  Button to agree to license terms. 
         */
        public static final int wizard_agree=0x7f0800b4;
        /**  Button to go to the previous page in the first time start-up wizard. 
         */
        public static final int wizard_back=0x7f0800b6;
        /**  Button to go to the next page in the first time start-up wizard. 
         */
        public static final int wizard_next=0x7f0800b5;
        /**  Preference selection for SSH Authentication Agent to be able to use pubkeys 
         */
        public static final int yes=0x7f0800ce;
    }
    public static final class style {
        public static final int NoTitle=0x7f090000;
    }
    public static final class xml {
        public static final int host_prefs=0x7f050000;
        public static final int preferences=0x7f050001;
    }
}
